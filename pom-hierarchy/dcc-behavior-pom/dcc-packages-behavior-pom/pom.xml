<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

    <modelVersion>4.0.0</modelVersion>
    <groupId>org.metaeffekt.dcc</groupId>
    <artifactId>dcc-packages-behavior-pom</artifactId>
    <packaging>pom</packaging>
    <version>0.13-SNAPSHOT</version>

    <parent>
        <groupId>org.metaeffekt.core</groupId>
        <artifactId>ae-core-plugin-management-pom</artifactId>
        <version>0.1.0</version>
        <relativePath />
    </parent>

    <properties>
        <ae.core.version>0.1.0</ae.core.version>
        <dcc.version>0.13-SNAPSHOT</dcc.version>
        
        <dcc.test.directory>${project.build.directory}/dcc</dcc.test.directory>
        <dcc.test.packages.directory>${dcc.test.directory}/packages</dcc.test.packages.directory>
        <dcc.test.external.directory>${dcc.test.directory}/external</dcc.test.external.directory>
        <dcc.test.external.bin.directory>${dcc.test.external.directory}/bin</dcc.test.external.bin.directory>
        <dcc.test.resources.directory>${dcc.test.packages.directory}/${project.artifactId}</dcc.test.resources.directory>
        
        <!-- include everything that follows a certain naming convention -->
        <dcc.documentation.includes>**/*-profile.xml,profile.xml,**/*-contribution.xml</dcc.documentation.includes>

        <!-- on package-level we include base and contribution profiles. -->
        <dcc.documentation.includeBaseProfiles>true</dcc.documentation.includeBaseProfiles>
        <dcc.documentation.includeContributionProfiles>true</dcc.documentation.includeContributionProfiles>

        <!-- as default no binary is included in the package -->
        <dcc.package.binaries.name>none</dcc.package.binaries.name>
        <dcc.package.binaries.type>zip</dcc.package.binaries.type>
        
        <artifact.inventory.version>0.2-SNAPSHOT</artifact.inventory.version>
        <artifact.inventory.exclude.artifacts>^org\.metaeffekt\..*:*</artifact.inventory.exclude.artifacts>
        <artifact.inventory.manage.scope.provided>true</artifact.inventory.manage.scope.provided>
    </properties>

    <profiles>
        <profile>
            <id>it</id>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-surefire-plugin</artifactId>
                            <configuration>
                                <includes>
                                    <include>**/*Test.java</include>
                                    <include>**/*IntegrationTest.java</include>
                                </includes>
                                <runOrder>alphabetical</runOrder>
                            </configuration>
                            <executions>
                                <execution>
                                    <id>integration-test</id>
                                    <goals>
                                        <goal>test</goal>
                                    </goals>
                                    <phase>integration-test</phase>
                                    <configuration>
                                        <excludes>
                                            <exclude>none</exclude>
                                        </excludes>
                                        <includes>
                                            <include>**/*IntegrationTest.java</include>
                                        </includes>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
    </profiles>
    
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.metaeffekt.dcc</groupId>
                <artifactId>dcc-dependency-management-pom</artifactId>
                <version>${dcc.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <configuration>
                        <includes>
                            <include>**/*Test.java</include>
                        </includes>
                        <excludes>
                            <exclude>**/*IntegrationTest.java</exclude>
                        </excludes>
                        <runOrder>alphabetical</runOrder>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>2.6</version>
                    <configuration>
                        <descriptorSourceDirectory>${basedir}/src/assemble</descriptorSourceDirectory>
                        <ignoreMissingDescriptor>true</ignoreMissingDescriptor>
                    </configuration>
                    <executions>
                        <execution>
                            <id>make-assembly</id>
                            <phase>package</phase>
                            <goals>
                                <goal>single</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <executions>
                        <execution>
                            <!-- copy packages into target test folder to enable test harness -->
                            <id>unpack-packages</id>
                            <phase>generate-resources</phase>
                            <goals>
                                <goal>unpack-dependencies</goal>
                            </goals>
                            <configuration>
                                <includeClassifiers>package</includeClassifiers>
                                <outputDirectory>${dcc.test.packages.directory}</outputDirectory>
                                <excludes>META-INF/**/*,META-INF</excludes>
                            </configuration>
                        </execution>
                        <execution>
                            <!-- copy binaries into target test folder to enable test harness -->
                            <id>copy-package-binaries</id>
                            <phase>generate-resources</phase>
                            <goals>
                                <goal>copy-dependencies</goal>
                            </goals>
                            <configuration>
                                <includeArtifactIds>${dcc.package.binaries.name}</includeArtifactIds>
                                <includeTypes>${dcc.package.binaries.type}</includeTypes>
                                <includeScope>provided</includeScope>
                                <outputDirectory>${dcc.test.packages.directory}/${project.artifactId}/bin</outputDirectory>
                            </configuration>
                        </execution>
                        <execution>
                            <!-- copy external binaries into target test folder to enable test harness -->
                            <id>copy-external-binaries</id>
                            <phase>generate-resources</phase>
                            <goals>
                                <goal>copy-dependencies</goal>
                            </goals>
                            <configuration>
                                <includeArtifactIds>${dcc.external.binaries.name}</includeArtifactIds>
                                <includeTypes>zip</includeTypes>
                                <includeClassifiers>bin</includeClassifiers>
                                <outputDirectory>${dcc.test.external.bin.directory}</outputDirectory>
                            </configuration>
                        </execution>
                        <execution>
                            <id>aggregate</id>
                            <phase>validate</phase>
                            <goals>
                                <goal>copy-dependencies</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>${dcc.test.directory}/lib</outputDirectory>
                                <includeScope>runtime</includeScope>
                                <excludeClassifiers>package</excludeClassifiers>
                                <actTransitively>true</actTransitively>
                            </configuration>
                        </execution>
                        <execution>
                            <id>copy-styling-resources</id>
                            <phase>initialize</phase>
                            <goals>
                                <goal>unpack</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>${dcc.test.directory}/doc</outputDirectory>
                                <overwrite>true</overwrite>
                                <artifactItems>
                                    <artifactItem>
                                        <groupId>org.metaeffekt.dcc</groupId>
                                        <artifactId>dcc-styling</artifactId>
                                        <version>${dcc.version}</version>
                                        <classifier>runtime</classifier>
                                        <type>jar</type>
                                        <includes>**/*</includes>
                                        <excludes>META-INF/**, META-INF</excludes>
                                    </artifactItem>
                                </artifactItems>
                            </configuration>
                        </execution>
                   </executions>
                </plugin>
                <plugin>
                    <groupId>org.metaeffekt.dcc</groupId>
                    <artifactId>dcc-documentation-maven-plugin</artifactId>
                    <version>${dcc.version}</version>
                    <executions>
                        <execution>
                            <id>generate-html-documentation</id>
                            <goals>
                                <goal>generate</goal>
                            </goals>
                            <configuration>
                                <profileDir>${dcc.test.directory}</profileDir>
                                <targetDir>${dcc.test.directory}/doc</targetDir>
                                <includes>${dcc.documentation.includes}</includes>
                                <includeBaseProfiles>${dcc.documentation.includeBaseProfiles}</includeBaseProfiles>
                                <includeContributionProfiles>${dcc.documentation.includeContributionProfiles}</includeContributionProfiles>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <!-- Filtering issue with 2.7 version; needs investigation -->
                    <version>2.6</version>
                    <executions>
                        <execution>
                            <id>copy-local-package</id>
                            <phase>process-sources</phase>
                            <goals>
                                <goal>copy-resources</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>${dcc.test.resources.directory}</outputDirectory>
                                <resources>
                                    <resource>
                                        <directory>src/main/resources</directory>
                                        <filtering>true</filtering>
                                        <includes>
                                            <include>**/*</include>
                                        </includes>
                                        <excludes>
                                            <exclude>**/bin/**/*</exclude>
                                            <exclude>**/*.jks</exclude>
                                            <exclude>**/*.pem</exclude>
                                            <exclude>**/*.truststore</exclude>
                                            <exclude>**/*.keystore</exclude>
                                            <exclude>**/*.properties</exclude>
                                        </excludes>
                                    </resource>
                                </resources>
                                <overwrite>true</overwrite>
                                <useDefaultDelimiters>false</useDefaultDelimiters>
                                <delimiters>
                                    <delimiter>@</delimiter>
                                </delimiters>
                            </configuration>
                        </execution>
                        <execution>
                        <id>copy-local-package-binaries</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${dcc.test.resources.directory}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/resources</directory>
                                    <filtering>false</filtering>
                                    <includes>
                                        <include>**/bin/**/*</include>
                                        <include>**/*.jks</include>
                                        <include>**/*.pem</include>
                                        <include>**/*.keystore</include>
                                        <include>**/*.truststore</include>
                                    </includes>
                                        <excludes>
                                            <exclude>**/*.properties</exclude>
                                        </excludes>
                                    </resource>
                                </resources>
                                <overwrite>true</overwrite>
                                <useDefaultDelimiters>false</useDefaultDelimiters>
                                <delimiters>
                                    <delimiter>@</delimiter>
                                </delimiters>
                            </configuration>
                        </execution>
                        <execution>
                            <id>copy-local-package-properties</id>
                            <phase>process-sources</phase>
                            <goals>
                                <goal>copy-resources</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>${dcc.test.resources.directory}</outputDirectory>
                                <encoding>ISO-8859-1</encoding>
                                <resources>
                                    <resource>
                                        <directory>src/main/resources</directory>
                                        <filtering>true</filtering>
                                        <includes>
                                            <include>**/*.properties</include>
                                        </includes>
                                </resource>
                            </resources>
                            <overwrite>true</overwrite>
                            <useDefaultDelimiters>false</useDefaultDelimiters>
                            <delimiters>
                                <delimiter>@</delimiter>
                            </delimiters>
                        </configuration>
                    </execution>
                        <execution>
                            <id>copy-local-test-resources</id>
                            <phase>process-sources</phase>
                            <goals>
                                <goal>copy-resources</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>${dcc.test.directory}</outputDirectory>
                                <resources>
                                    <resource>
                                        <directory>src/test/resources</directory>
                                        <filtering>true</filtering>
                                        <includes>
                                            <include>**/*</include>
                                        </includes>
                                        <excludes>
                                            <exclude>**/bin/**/*</exclude>
                                            <exclude>**/*.properties</exclude>
                                        </excludes>
                                    </resource>
                                </resources>
                                <overwrite>true</overwrite>
                                <useDefaultDelimiters>false</useDefaultDelimiters>
                                <delimiters>
                                    <delimiter>@</delimiter>
                                </delimiters>
                            </configuration>
                        </execution> 
                        <execution>
                            <id>copy-local-test-binaries</id>
                            <phase>process-sources</phase>
                            <goals>
                                <goal>copy-resources</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>${dcc.test.directory}</outputDirectory>
                                <resources>
                                    <resource>
                                        <directory>src/test/resources</directory>
                                        <filtering>true</filtering>
                                        <includes>
                                            <include>**/bin/**/*</include>
                                        </includes>
                                        <excludes>
                                            <exclude>**/*.properties</exclude>
                                        </excludes>
                                    </resource>
                                </resources>
                                <overwrite>true</overwrite>
                                <useDefaultDelimiters>false</useDefaultDelimiters>
                                <delimiters>
                                    <delimiter>@</delimiter>
                                </delimiters>
                            </configuration>
                        </execution>
                        <execution>
                            <id>copy-local-test-properties</id>
                            <phase>process-sources</phase>
                            <goals>
                                <goal>copy-resources</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>${dcc.test.directory}</outputDirectory>
                                <encoding>ISO-8859-1</encoding>
                                <resources>
                                    <resource>
                                        <directory>src/test/resources</directory>
                                        <filtering>true</filtering>
                                        <includes>
                                            <include>**/*.properties</include>
                                        </includes>
                                    </resource>
                                </resources>
                                <overwrite>true</overwrite>
                                <useDefaultDelimiters>false</useDefaultDelimiters>
                                <delimiters>
                                    <delimiter>@</delimiter>
                                </delimiters>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                
                <plugin>
                    <groupId>com.mycila</groupId>
                    <artifactId>license-maven-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>add-header-to-preserved-sources</id>
                            <configuration>
                                <!-- exclude third-party resources that must not receive a header -->
                                <excludes combine.children="append">
                                    <exclude>target/opt/**/*</exclude>
                                    <exclude>target/dcc/**/*</exclude>
                                </excludes>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <!-- published public artifacts using an api jar  -->
                    <groupId>org.metaeffekt.core</groupId>
                    <artifactId>ae-api-publish-maven-plugin</artifactId>
                    <version>${ae.core.version}</version>
                    <executions>
                        <execution>
                            <id>package-api</id>
                            <phase>package</phase>
                            <goals>
                                <goal>publishapi</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <scanRootDir>${basedir}/target/classes</scanRootDir>
                        <annotationClass>org.metaeffekt.core.commons.annotation.Public</annotationClass>
                        <filesets>
                            <fileset>
                                <directory>${basedir}/target/classes</directory>
                                <includes>
                                    <include>--nothing--</include>
                                </includes>
                            </fileset>
                        </filesets>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.metaeffekt.core</groupId>
                            <artifactId>ae-commons-annotation</artifactId>
                            <version>${ae.core.version}</version>
                            <classifier>api</classifier>
                        </dependency>
                    </dependencies>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.metaeffekt.core</groupId>
                <artifactId>ae-api-publish-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.metaeffekt.core</groupId>
                <artifactId>ae-inventory-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.metaeffekt.dcc</groupId>
                <artifactId>dcc-documentation-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        
        <dependency>
            <groupId>org.metaeffekt.dcc</groupId>
            <artifactId>dcc-commons</artifactId>
            <classifier>runtime</classifier>
            <scope>runtime</scope>
            <version>${dcc.version}</version>
        </dependency>

        <dependency>
            <groupId>org.metaeffekt.dcc</groupId>
            <artifactId>dcc-commons</artifactId>
            <classifier>tests</classifier>
            <scope>test</scope>
            <version>${dcc.version}</version>
        </dependency>

        <dependency>
            <groupId>org.metaeffekt.dcc</groupId>
            <artifactId>dcc-controller</artifactId>
            <classifier>runtime</classifier>
            <scope>test</scope>
            <version>${dcc.version}</version>
        </dependency>

        <dependency>
            <groupId>org.metaeffekt.dcc</groupId>
            <artifactId>dcc-controller</artifactId>
            <classifier>tests</classifier>
            <scope>test</scope>
            <version>${dcc.version}</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <optional>true</optional>
        </dependency>

    </dependencies>

</project>
